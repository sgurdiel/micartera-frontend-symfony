name: PHPUnit test & Static code analysis

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '**.md'
      - LICENSE
      - 'translations/**'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '**.md'
      - LICENSE
      - 'translations/**'

env:
  XDEBUG_MODE: coverage

permissions:
  contents: read

jobs:
  build:
    name: micartera-frontend-symfony

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.4.4
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: micartera_test
          MYSQL_HOST: 127.0.0.1
        ports:
          - 3306:3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      fail-fast: false

    env:
      APP_ENV: test
      APP_RELEASE: test
      APP_SECRET: kv95njkb5t90v89jtrbjh3bvdv
      DATABASE_URL: mysql://root:password@127.0.0.1:3306/micartera?serverVersion=8.4
      TRUSTED_PROXIES:
      SYMFONY_DEPRECATIONS_HELPER: disabled=1

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup devbox
      uses: jetify-com/devbox-install-action@v0.13.0
      with:
        # Caching the entire Nix store in github based on your devbox.json
        enable-cache: true

    - name: Validate composer.json and composer.lock
      run: devbox run composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: devbox run composer install --prefer-dist --no-progress --optimize-autoloader

    - name: Run Database setup
      run: |
        devbox run bin/console doctrine:database:create --if-not-exists --env=test || echo "Schema creation failed"
        devbox run bin/console doctrine:schema:drop --force --env=test || echo "Schema drop failed"
        devbox run bin/console doctrine:schema:create --env=test || echo "Schema create failed"
        devbox run bin/console doctrine:fixtures:load --no-interaction --env=test || echo "Fixtures load failed"

    - name: Install NPM dependencies
      run: devbox run npm install

    - name: NPM Build
      run: devbox run npm run build

    - name: Run all test suites
      run: devbox run vendor/bin/phpunit --testsuite=all --coverage-text
       
    - name: Psalm static code analysis
      run: devbox run vendor/bin/psalm
